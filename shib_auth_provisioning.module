<?php

/* implementation of hook_menu */
function shib_auth_provisioning_menu() {
  $items = array();
  $items['admin/user/shib_auth/provisioning'] = array(
   'title' => 'Register new accounts',
   'description' => 'Provision new Shibboleth accounts',
   'page callback' => 'drupal_get_form',
   'page arguments' => array('shib_auth_admin_provisioning'),
   'type'             => MENU_LOCAL_TASK,
   'access arguments' => array('administer shibboleth authentication'),
 );

 return $items;
}

function shib_auth_admin_provisioning(&$form_state) {
	$form = array();

	$form['user_info'] = array(
		'#title' => t('User information'),
		'#type' => 'textarea',
		'#description' => t('Please insert one user per line in the form username|email'),
		'#required' => true
	);

	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Register')
	);

	return $form;
}

function shib_auth_admin_provisioning_submit($form, &$form_state) {

  if($form_state['values']['op'] == t('Register')) {		
    $lines = explode("\n", $form_state['values']['user_info']);		
    if (!empty($lines)) {
      for ($i = 0; $i < count($lines); $i++) {
        preg_match_all('~(.*)\|(.*)~', $lines[$i], $matches);
        if (!empty($matches) && $matches[1][0] != '' && $matches[2][0] != '') {
          shib_auth_save_authmap(check_plain($matches[1][0]), check_plain($matches[1][0]), check_plain($matches[2][0]));
          session_save_session(FALSE);
        }
      }
    }
  }
}
